pipeline{
    agent any 
    parameters{
        choice(name:'Action',choices:['plan','apply','destroy'],description:'Select the action to be performed')
        booleanParam(name:'ApplyApproval',defaultValue:false,description:'Are you confirming terraform apply')
        booleanParam(name:'DestroyApproval',defaultValue:false,description:'Are you confirming terraform destroy')
     }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        
    }
    
    stages{
        stage('Checkout Code'){
            steps{
                script{
               
                     git branch: 'master',url:'https://github.com/skykesavanke/Artifact_Imagebuild.git'
               
        }
            }
        }
        stage('Verification'){
            steps{
                bat 'aws sts get-caller-identity'
            }
        }

        stage('Terraform Initialize'){
             steps{
                 bat 'C:\\Users\\kesavank\\Terraform\\terraform init'
            }
        }
        stage('Terraform run'){
           steps{
             script{
                if(params.Action=='plan'){
                    bat 'C:\\Users\\kesavank\\Terraform\\terraform plan'
                }
                else if(params.Action=='apply'){
                    if(params.ApplyApproval){
                         bat 'C:\\Users\\kesavank\\Terraform\\terraform apply -auto-approve'
                    }
                    else{
                        echo "Apply Approval required"
                    }
                }
                else if(params.Action=='destroy'){
                    if(params.DestroyApproval){
                        bat 'C:\\Users\\kesavank\\Terraform\\terraform destroy -auto-approve'
                    }
                    else {
                        echo "Destroy approval required"
                    }
                }
               
                else {
                        error "Invalid action: ${params.Action}"
                    }
                
             }
           }
        }
        stage('Build Artifact Pipeline trigger'){
            steps{
                build job : 'Image_Build_from_Artifact'
            }
       
    }

}
}
    



  
       


                   