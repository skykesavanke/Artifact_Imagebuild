pipeline{
    agent any

    environment{
         AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
         AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
         ARTIFACT_REPO = "buildartifactrepo"
         REGION = "us-east-1"
         AWS_ACCOUNT_ID="211125415675"
        IMAGE_REPO_NAME = "helloworldrepo"
        AWS_REGION = 'us-east-1'
        ECR_URL= "211125415675.dkr.ecr.${REGION}.amazonaws.com"
    }
    
    stages{
       stage('Code Checkout'){
             
             steps{
                script{
                git branch:'master',url:'https://github.com/skykesavanke/Artifact_Imagebuild.git'
            }
             }

       
        }
        stage('Building Artifact'){
            
            steps{
            
                

                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn clean'
                echo ".......Cleaning the previous build......"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn validate'
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn compile'
                echo ".......Compiling the source code......"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn package'
                echo ".......Creating Jar files........"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn verify'
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn install'
                bat 'move target\\*.jar target\\hello-artifact.jar'
                echo "............Moving the JAR files.........."
                bat 'dir target'
                
                
            }
        }
        stage('Push to Code Artifact'){
            steps{
                script{
                  
                def domainName = 'domain-1'
                def repositoryName = "${env.ARTIFACT_REPO}"
                def artifactPath = 'target\\hello-artifact.jar'
                def region ="${env.REGION}"

                bat """
                    set ARTIFACT_REPO=${repositoryName}
                    set REGION=${region}
                        
                   
                    aws codeartifact associate-external-connection --external-connection public:maven-central --domain $domainName --domain-owner 211125415675 --repository $repositoryName --region $region

                    
                    set CODEARTIFACT_AUTH_TOKEN='aws codeartifact get-authorization-token --domain $domainName --domain-owner ${env.AWS_ACCOUNT_ID} --query authorizationToken --output text'

                    echo %CODEARTIFACT_AUTH_TOKEN%

                    aws codeartifact login --tool npm --repository $repositoryName --domain $domainName --domain-owner ${env.AWS_ACCOUNT_ID} --region $region

               """
             
                }        


            }
        }
        stage('Push image to ECR'){
            steps{
                script{
                
                    def imageRepoName = "${env.IMAGE_REPO_NAME}"
                    def awsRegion = "${env.REGION}"
                    def ecrUrl = "211125415675.dkr.ecr.${awsRegion}.amazonaws.com"

                        
                        bat """
                                set IMAGE_REPO_NAME=${imageRepoName}
                                set AWS_REGION=${awsRegion}
                                set ECR_URL=${ecrUrl}

                                aws ecr get-login-password --region %AWS_REGION% | docker login --username AWS --password-stdin  %ECR_URL%
                                docker build -t  %IMAGE_REPO_NAME% .
                                docker tag %IMAGE_REPO_NAME%:latest %ECR_URL%/%IMAGE_REPO_NAME%:latest
                                docker push  %ECR_URL%/%IMAGE_REPO_NAME%:latest
                       """
                    } 
                    
             }  
    }
        
        }
    }


