pipeline{
    agent any

    environment{
         AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
         AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
         
         ARTIFACT_REPO = "buildartifactrepo"
         REGION = "us-east-1"
         AWS_ACCOUNT_ID="211125415675"
        IMAGE_REPO_NAME = "helloworldrepo"
        AWS_REGION = 'us-east-1'
        ECR_URL= "211125415675.dkr.ecr.${REGION}.amazonaws.com"
    }
    
    stages{
       stage('Code Checkout'){
             
             steps{
                script{
                git branch:'master',url:'https://github.com/skykesavanke/Artifact_Imagebuild.git'
            }
             }

       
        }
        stage ('Token Generation'){
            steps{
                bat ''' FOR /f "tokens=*" %%i IN ('aws codeartifact get-authorization-token --domain domain-1 --domain-owner 211125415675 --region us-east-1 --query authorizationToken --output text') DO SET CODEARTIFACT_AUTH_TOKEN=%%i '''
            }
        }
        stage('Building Artifact'){
            
            steps{
            
                

                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn clean'
                echo ".......Cleaning the previous build......"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn validate'
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn compile'
                echo ".......Compiling the source code......"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn package'
                echo ".......Creating Jar files........"
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn verify'
                bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn install'
                //bat 'move target\\*.jar target\\hello-artifact.jar'
                //echo "............Moving the JAR files.........."
                //bat 'dir target'
                
                
            }
        }
        stage('Push to Code Artifact'){
            steps{
                
                    
                 //bat 'C:\\Users\\kesavank\\Maven\\apache-maven-3.9.6\\bin\\mvn clean deploy'
                 //bat "aws codeartifact associate-external-connection --external-connection public:maven-central --domain domain-1 --domain-owner 211125415675 --repository buildartifactrepo --region us-east-1"
                 bat "C:\\Windows\\System32\\curl.exe --request PUT https://domain-1-211125415675.d.codeartifact.us-east-1.amazonaws.com/maven/buildartifactrepo/C/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/Image_Build_from_Artifact/target/helloworld-0.0.1-SNAPSHOT.jar --user aws:$CODEARTIFACT_AUTH_TOKEN --data-binary @helloworld-0.0.1-SNAPSHOT.jar"

                 
                 bat "C:\\Windows\\System32\\curl.exe --request PUT https://domain-1-211125415675.d.codeartifact.us-east-1.amazonaws.com/maven/buildartifactrepo/C/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/Image_Build_from_Artifact/target/helloworld-0.0.1-SNAPSHOT.jar --user aws:$CODEARTIFACT_AUTH_TOKEN --data-binary @C:\\Windows\\System32\\config\\systemprofile\\AppData\\Local\\Jenkins\\.jenkins\\workspace\\Image_Build_from_Artifact\\pom.xml"


                 //bat "aws codeartifact put-asset --domain domain-1 --domain-owner 211125415675 --repository buildartifactrepo --format maven --path C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/Image_Build_from_Artifact/target/*.jar--asset-name your-jar-name.jar --authorization-token ${env.CODEARTIFACT_AUTH_TOKEN}"
                
                

            }
        }
    //     stage('Push image to ECR'){
    //         steps{
    //             script{
                
    //                 def imageRepoName = "${env.IMAGE_REPO_NAME}"
    //                 def awsRegion = "${env.REGION}"
    //                 def ecrUrl = "211125415675.dkr.ecr.${awsRegion}.amazonaws.com"

                        
    //                     bat """
    //                             set IMAGE_REPO_NAME=${imageRepoName}
    //                             set AWS_REGION=${awsRegion}
    //                             set ECR_URL=${ecrUrl}

    //                             aws ecr get-login-password --region %AWS_REGION% | docker login --username AWS --password-stdin  %ECR_URL%
    //                             docker build -t  %IMAGE_REPO_NAME% .
    //                             docker tag %IMAGE_REPO_NAME%:latest %ECR_URL%/%IMAGE_REPO_NAME%:latest
    //                             docker push  %ECR_URL%/%IMAGE_REPO_NAME%:latest
    //                    """
    //                 } 
                    
    //          }  
    // }
        
        }
    }


